name: Lotto Report Auto-Deploy

設定排程：每天上午 9:00 執行 (台灣時間下午 5:00)
註: cron 時間是 UTC 時間。台灣時區為 UTC+8，所以 17點 (下午 5點) 對應 UTC 9點。
on:
schedule:
- cron: '0 9 * * *'

也可以手動觸發 workflow
workflow_dispatch:

jobs:
build-and-deploy:
runs-on: ubuntu-latest
steps:
# 1. 檢出程式碼 (將 GitHub 倉庫的檔案下載到雲端伺服器)
- name: Checkout Repository
uses: actions/checkout@v4

  # 2. 設定 Python 環境
  - name: Set up Python
    uses: actions/setup-python@v5
    with:
      python-version: '3.x'
      
  # 3. 安裝 Python 依賴
  - name: Install dependencies
    run: |
      pip install pandas

  # 4. 運行您的數據腳本 (這裡需要確保 history_data.json 是最新的，這是佔位符)
  - name: Run Data Update Script (Placeholder)
    run: |
      echo "Simulating data update process..."
      # 【重要提示】: 在實際部署中，您需要將您的爬蟲程式碼放在這裡！
      # 例如: python update_539_integrated.py ...
  
  # 5. 運行報告生成腳本 (將數據嵌入 historical_matrix.html)
  - name: Generate HTML Report
    run: python generate_html_report.py

  # **關鍵修復：配置權限**
  - name: Configure Deployment Permissions
    run: |
      git config user.name "github-actions[bot]"
      git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
  # **關鍵修復：發佈 gh-pages 分支**
  # 6. 將生成的報告部署到 GitHub Pages
  - name: Deploy to GitHub Pages
    uses: peaceiris/actions-gh-pages@v4
    with:
      github_token: ${{ secrets.GITHUB_TOKEN }}
      # 修正發佈路徑和檔案名稱
      publish_dir: ./ 
      destination_dir: .
      publish_branch: gh-pages # 部署到 gh-pages 分支
      # 部署時，將 historical_matrix.html 複製並命名為 index.html，讓網站可以訪問
      force_orphan: true 
      keep_files: false
